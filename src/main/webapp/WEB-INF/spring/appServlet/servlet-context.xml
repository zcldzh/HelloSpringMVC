<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:hz="http://www.hazelcast.com/schema/spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:property-placeholder file-encoding="UTF-8" location="classpath:spring-env/dev.properties" /> 
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="net.paxcel.springmvc" />
	
	<tx:annotation-driven />		
	<!-- TX Database 1 -->
	<bean id="db1DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>net.sourceforge.jtds.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>${db1.jdbc.url}</value>
		</property>

		<property name="user" value="${db1.jdbc.user}" />
		<property name="password" value="${db1.jdbc.confirmation}" />

		<property name="idleConnectionTestPeriod" value="50" />  <!-- seconds -->
		<property name="preferredTestQuery" value="SELECT 1" />
		<property name="testConnectionOnCheckin" value="true" />
		<property name="checkoutTimeout" value="${db1.jdbc.checkoutTimeoutMS}" />  <!-- milliseconds -->
		<property name="loginTimeout" value="${db1.jdbc.loginTimeoutMS}" />

		<property name="maxPoolSize" value="${db1.jdbc.maxPoolSize}" />  <!-- connections -->
		<property name="minPoolSize" value="${db1.jdbc.minPoolSize}" />  <!-- connections -->
		<property name="acquireIncrement" value="${db1.jdbc.poolIncrement}" />  <!-- connections -->
		<property name="initialPoolSize" value="${db1.jdbc.initialPoolSize}" />  <!-- connections -->

		<property name="maxIdleTime" value="50" />  <!-- seconds -->
		<property name="numHelperThreads" value="2" />  <!-- threads -->
		<property name="maxStatements" value="0" />  <!-- statement cache, across all connections -->

	</bean>
	
	
	<bean id="db1SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="db1DataSource" />
        <property name="packagesToScan" value="net.paxcel.springmvc.session1.entity" />
        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2005Dialect</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
			</props>
        </property>
    </bean>

    <bean id="db1TransactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="db1SessionFactory" />
    </bean>

	<!-- TX Database 2 -->
	<bean id="db2DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>net.sourceforge.jtds.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>${db2.jdbc.url}</value>
		</property>

		<property name="user" value="${db2.jdbc.user}" />
		<property name="password" value="${db2.jdbc.confirmation}" />

		<property name="idleConnectionTestPeriod" value="50" />  <!-- seconds -->
		<property name="preferredTestQuery" value="SELECT 1" />
		<property name="testConnectionOnCheckin" value="true" />
		<property name="checkoutTimeout" value="${db2.jdbc.checkoutTimeoutMS}" />  <!-- milliseconds -->
		<property name="loginTimeout" value="${db2.jdbc.loginTimeoutMS}" />

		<property name="maxPoolSize" value="${db2.jdbc.maxPoolSize}" />  <!-- connections -->
		<property name="minPoolSize" value="${db2.jdbc.minPoolSize}" />  <!-- connections -->
		<property name="acquireIncrement" value="${db2.jdbc.poolIncrement}" />  <!-- connections -->
		<property name="initialPoolSize" value="${db2.jdbc.initialPoolSize}" />  <!-- connections -->

		<property name="maxIdleTime" value="50" />  <!-- seconds -->
		<property name="numHelperThreads" value="2" />  <!-- threads -->
		<property name="maxStatements" value="0" />  <!-- statement cache, across all connections -->

	</bean>
	
	<bean id="db2SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="db2DataSource" />
        <property name="packagesToScan" value="net.paxcel.springmvc.session2.entity" />
        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2005Dialect</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
			</props>
        </property>
    </bean>

    <bean id="db2TransactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="db2SessionFactory" />
    </bean>
	
	
	
</beans>
